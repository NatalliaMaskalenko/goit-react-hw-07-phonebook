{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactsList/ContactsList.module.css","redux/phonebook/phonebook-operations.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","number","rejectWithValue","contact","completed","post","deleteContact","contactId","delete","Form","getItems","useSelector","state","contacts","items","dispatch","useDispatch","useState","setName","setNumber","reset","className","s","form","onSubmit","e","preventDefault","normolizedName","toLowerCase","find","item","alert","form__label","form__input","value","type","pattern","title","required","onChange","currentTarget","form__button","ContactsItem","onDeleteContact","text","button","onClick","ContactsList","filter","normalizedFilter","includes","useEffect","contacts__list","map","id","createAction","changeFilter","Filter","filter__label","filter__input","event","target","placeholder","App","container","createReducer","fulfilled","_","payload","loading","pending","rejected","combineReducers","persistConfig","key","storage","rootReduser","persistReducer","phonebookReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6b6ad00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__1vvAO\",\"text\":\"ContactsItem_text__TjkxW\",\"button\":\"ContactsItem_button__29RpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__gAr-M\",\"filter__input\":\"Filter_filter__input__j8sNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1NBV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__2JEq-\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n// import {\r\n//     addRequest,\r\n//     addSuccess,\r\n//     addError,\r\n//     deleteRequest,\r\n//     deleteSuccess,\r\n//     deleteError,\r\n//     fetchContactsRequest,\r\n//     fetchContactsSuccess,\r\n//     fetchContactsError,\r\n    \r\n// } from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://61abb3b6264ec200176d42f8.mockapi.io/api/v1/';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contact/fetchContacts',\r\n    async () => {\r\n        const { data } = await axios.get('/contacts');\r\n        return data;\r\n    }\r\n\r\n);\r\n\r\nexport const addContact = createAsyncThunk('addContact', async ({ name, number }, { rejectWithValue }) => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n        completed: false,\r\n    };\r\n            \r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n        return data;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n});\r\n\r\nexport const deleteContact = createAsyncThunk('deleteContact', async (contactId, { rejectWithValue }) => {\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`);\r\n        return contactId;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n})\r\n\r\n// export const deleteContact = contactId => dispatch => {\r\n//     dispatch(deleteRequest());\r\n//     axios\r\n//         .delete(`/contacts/${contactId}`)\r\n//         .then(() => dispatch(deleteSuccess(contactId)))\r\n//         .catch(error => dispatch(deleteError(error)));\r\n\r\n// };\r\n\r\n\r\n// export const addContact = ({ name, number }) => dispatch => {\r\n//     const contact = {\r\n//         name,\r\n//         number,\r\n//         completed: false,\r\n//     };\r\n\r\n//     dispatch(addRequest());\r\n\r\n//     axios\r\n//         .post('/contacts', contact)\r\n//         .then(({ data }) => dispatch(addSuccess(data)))\r\n//         .catch(error => dispatch(addError(error)));\r\n// };\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//     dispatch(fetchContactsRequest());\r\n\r\n//     try {\r\n//         const { data } = await axios.get('/contacts');\r\n//         dispatch(fetchContactsSuccess(data));\r\n//         console.log(data);\r\n//     } catch (error) {\r\n//        dispatch(fetchContactsError(error)) \r\n//     }\r\n\r\n//     // axios\r\n//     //     .get('/contacts')\r\n//     //     .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n//     //     .catch(error => dispatch(fetchContactsError(error)));       \r\n// };\r\n\r\n\r\n\r\n// export const deleteContact = contactId => dispatch => {\r\n//     dispatch(deleteRequest());\r\n//     axios\r\n//         .delete(`/contacts/${contactId}`)\r\n//         .then(() => dispatch(deleteSuccess(contactId)))\r\n//         .catch(error => dispatch(deleteError(error)));\r\n\r\n// };","import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport {addContact} from '../../redux/phonebook/phonebook-operations';\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n  const getItems = useSelector((state) => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number)=> dispatch(addContact(name, number));\r\n       \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const handleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  \r\n  const handleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n  \r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normolizedName = name.toLowerCase();\r\n    \r\n    if (getItems.find((item) =>      \r\n      item.name.toLowerCase() === normolizedName\r\n    )) {\r\n        alert(`${name} is already in contacts`);\r\n      } else {\r\n       onSubmit({ name, number }); \r\n    };      \r\n    reset()\r\n  };\r\n  \r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n  \r\n  return (\r\n    <form\r\n      className={s.form}\r\n      onSubmit={handelSubmit}>\r\n      \r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      \r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n        />\r\n      </label>\r\n      <button className={s.form__button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )  \r\n};\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(phonebookActions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({ name, number, onDeleteContact }) => (\r\n     <li className={s.item}>\r\n        <p className={s.text}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button className={s.button} onClick = {onDeleteContact}>Delete</button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {deleteContact, fetchContacts} from '../../redux/phonebook/phonebook-operations';\r\nimport s from './ContactsList.module.css'\r\nimport ContactsItem from '../ContactsItem';\r\n\r\n\r\nexport default function ContactsList () {\r\n    const contacts = useSelector((state) => {\r\n        const { filter, items } = state.contacts;\r\n        const normalizedFilter = filter.toLowerCase();\r\n        const visibleContacts = items.filter(item =>\r\n            item.name.toLowerCase().includes(normalizedFilter)\r\n        );       \r\n        return visibleContacts;\r\n    });\r\n    \r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n    \r\n    useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n    return (\r\n    <ul className={s.contacts__list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactsItem\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n        ))}\r\n    </ul>\r\n    )\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     const { filter, items } = state.contacts;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     const visibleContacts = items.filter(item =>\r\n//         item.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n    \r\n//     return {\r\n//     contacts: visibleContacts,\r\n//     }\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contact/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contact/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\nexport const addRequest = createAction('contact/addRequest');\r\nexport const addSuccess = createAction('contact/addSuccess');\r\nexport const addError = createAction('contact/addError');\r\n\r\nexport const deleteRequest = createAction('contact/deleteRequest');\r\nexport const deleteSuccess = createAction('contact/deleteSuccess');\r\nexport const deleteError = createAction('contact/deleteError');\r\n\r\nexport const changeFilter = createAction('contact/cgangeFilter');\r\n\r\n// export const deleteContact = createAction('contact/Delete');\r\n\r\n// const addContact = ({name, number}) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n\r\n// export default { addContact, deleteContact, changeFilter };","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\nimport {changeFilter} from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter () {\r\n    const value = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n    const onChangeFilter = (event) => dispatch(changeFilter(event.target.value));\r\n\r\n    return (<label className={s.filter__label}>\r\n        Find contacts by name\r\n        <input className={s.filter__input} type=\"text\" value={value} onChange={onChangeFilter} placeholder=\"Jacob Mercer\" />\r\n    </label>)\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//     value: state.contacts.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import '@pnotify/core/dist/BrightTheme.css';\r\nimport s from './App.module.css'\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\n// const useLocalStorage = (key, defaultValue) => {\r\n//    const [state, setState] = useState(() => {\r\n//        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n//    });\r\n//     return [state, setState]\r\n// };\r\n\r\nexport default function App() {\r\n    return (\r\n      <div className={s.container}>\r\n        <h1>Phonebook</h1>\r\n        <Form/>\r\n        <h2>Contacts</h2>\r\n        <Filter/>\r\n        <ContactsList/>\r\n      </div>\r\n   );\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addRequest,\r\n    addSuccess,\r\n    addError,\r\n    deleteRequest,\r\n    deleteSuccess,\r\n    deleteError,\r\n    changeFilter,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from './phonebook-actions';\r\nimport { fetchContacts, addContact, deleteContact } from './phonebook-operations';\r\n\r\n\r\nconst items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(({id}) => id !== payload),    \r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: ()=> false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n     [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n// const items = createReducer([], {\r\n//     [fetchContactsSuccess]: (state, { payload }) => payload,\r\n//     [addSuccess]: (state, { payload }) => [payload, ...state],\r\n//     [deleteSuccess]: (state, { payload }) => state.filter(({id}) => id !== payload),    \r\n// });\r\n\r\n// const items = (state = initilItems, {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [payload, ...state];\r\n        \r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload);\r\n  \r\n//         default:    \r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload\r\n               \r\n//         default:\r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n\r\n\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore, FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\n\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n}\r\n\r\nconst rootReduser = combineReducers({\r\n    contacts: persistReducer(persistConfig, phonebookReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReduser,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n\r\n// export default {store, persistor};\r\n\r\nexport default {store};\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\n// import { store, persistor } from './redux/store';\r\nimport { store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate> */}\r\n      \r\n        <App />\r\n      \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__qfoJu\",\"form__label\":\"Form_form__label__27RYF\",\"form__input\":\"Form_form__input__3vSQy\",\"form__button\":\"Form_form__button__3r7CL\"};"],"sourceRoot":""}